(ns day24.core-test
  (:require [clojure.test :refer :all]
            [day24.core :refer :all]
            [day24.path-finding :refer :all]))

(deftest easy
  (is (= 8 (simple-distance-between tinput [1 1] [1 9] )))
  (is (= 10 (simple-distance-between tinput [1 1] [3 9] )))
  (is (= 1 (simple-distance-between tinput [1 1] [1 2] ))))



(deftest distancebetween1
(is (=
    (map #(distance-between tinput [1 1] %) (get-targets tinput 5))
    '({[1 1] 2147483647, (2 1) 2147483648, (1 2) 2147483648, (1 3) 2147483649, (3 1) 2147483649, (1 4) 2147483650, (3 2) 2147483650, (3 3) 2147483651, (1 5) 2147483651, (3 4) 2147483652, (1 6) 2147483652, (1 7) 2147483653, (3 5) 2147483653, (1 8) 2147483654, (3 6) 2147483654, (1 9) 2147483655, (3 7) 2147483655, (2 9) 2147483656, (3 8) 2147483656, (3 9) 2147483657} {[1 1] 0, (2 1) 1, (1 2) 1, (1 3) 2, (3 1) 2, (1 4) 3, (3 2) 3, (3 3) 4, (1 5) 4, (3 4) 5, (1 6) 5, (1 7) 6, (3 5) 6, (1 8) 7, (3 6) 7, (1 9) 8, (3 7) 8, (2 9) 9, (3 8) 9, (3 9) 10} {[1 1] 0, (2 1) 1, (1 2) 1, (1 3) 2, (3 1) 2, (1 4) 3, (3 2) 3, (3 3) 4, (1 5) 4, (3 4) 5, (1 6) 5, (1 7) 6, (3 5) 6, (1 8) 7, (3 6) 7, (1 9) 8, (3 7) 8, (2 9) 9, (3 8) 9, (3 9) 10} {[1 1] 0, (2 1) 1, (1 2) 1, (1 3) 2, (3 1) 2, (1 4) 3, (3 2) 3, (3 3) 4, (1 5) 4, (3 4) 5, (1 6) 5, (1 7) 6, (3 5) 6, (1 8) 7, (3 6) 7, (1 9) 8, (3 7) 8, (2 9) 9, (3 8) 9, (3 9) 10} {[1 1] 0, (2 1) 1, (1 2) 1, (1 3) 2, (3 1) 2, (1 4) 3, (3 2) 3, (3 3) 4, (1 5) 4, (3 4) 5, (1 6) 5, (1 7) 6, (3 5) 6, (1 8) 7, (3 6) 7, (1 9) 8, (3 7) 8, (2 9) 9, (3 8) 9, (3 9) 10}))))

(deftest getalldists
  (let [ans (get-all-dists tinput 0 (get-targets tinput 5))
        n (get ans [1 3])
        dist (get n '(3 9))]
        (is (and (= 5 (count ans))
                 (= 20 (count n))
                 (= 8 dist)))))
